package org.spongepowered.common.mixin.exploit;

import net.minecraft.server.MinecraftServer;
import net.minecraft.util.text.ITextComponent;
import org.apache.logging.log4j.Logger;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;
import org.spongepowered.common.text.chat.ChatUtil;

@Mixin(MinecraftServer.class)
public abstract class MinecraftServerMixin_JNDIChatMessageBlock {

    // There is a vulnerability in log4j that can be exploited via jndi.
    // We block any incoming message that contains the start of the jndi
    // token to try to prevent any vulnerabilities hitting the client.
    @Inject(method = "sendMessage", at = @At(value = "HEAD"), cancellable = true)
    private void exploit$blockAttemptedJDNIExploit(final ITextComponent component, final CallbackInfo ci) {

        if (ChatUtil.isExploitable(component.getUnformattedText())) {
            // block the message because we know it could cause problems.
            // this just tells the client the message could not be sent.
            ci.cancel();
        }
    }
}
